C51 COMPILER V9.00   UART                                                                  07/20/2016 15:45:35 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN ..\OUT\uart.obj
COMPILER INVOKED BY: C:\C51\BIN\C51.EXE ..\SRC\uart.c LARGE BROWSE INCDIR(..\INC;..\PRO;..\SRC) DEBUG OBJECTEXTEND PRINT
                    -(.\uart.lst) OBJECT(..\OUT\uart.obj)

line level    source

   1          #include "include.h"
   2          
   3          volatile OS_UART xdata uart;
   4          volatile UINT8 InTemp;
   5          bit busy;
   6          
   7          #define RCV_OVER_TIMER          2
   8          #define RCV_OVER_TIMER232               2
   9          extern void Serial232PutChar(UINT8 dat);
  10          extern void Send485SerialByte(UINT8 *Ram, UINT16 len);
  11          
  12          
  13          /***************************************************
  14                          UART1初始化
  15                                                                                                  7     6     5     4     3     2     1     0     Reset Value
  16          sfr SCON = 0x98; //Serial Control         SM0/FE SM1   SM2   REN   TB8   RB8    TI    RI    0000,0000
  17          SM0 SM1:
  18           0   0         同步移位寄存器           fosc/12
  19           0   1             10位异步收发         由定时器控制
  20           1   0         11位异步收发             fosc/32或fosc/64
  21           1   1         11位异步收发         由定时器控制
  22          P = PSW.0      P=1奇   P=0偶
  23          ***************************************************/
  24          void InitT485(void)
  25          {
  26   1              SCON = 0x50;            //8位数据,可变波特率
  27   1              AUXR &= 0xBF;           //定时器1时钟为Fosc/12,即12T
  28   1              AUXR &= 0xFE;           //串口1选择定时器1为波特率发生器
  29   1              TMOD &= 0x0F;           //设定定时器1为16位自动重装方式
  30   1              TL1 = 0xE8;             //设定定时初值
  31   1              TH1 = 0xFF;             //设定定时初值
  32   1              ET1 = 0;                //禁止定时器1中断
  33   1              TR1 = 1;                //启动定时器1
  34   1      
  35   1      
  36   1      //      TMOD = (TMOD & 0x0f) | 0x20;    //8位自动重载定时器
  37   1      //      SCON = 0xd0;                            //串行口工作模式3选择
  38   1      //      IP   = 0x10;                                //PS set the high
  39   1      //      PCON  &= 0x7f;                  //SOMD =0
  40   1      //
  41   1      //      //波特率 38400
  42   1      //      AUXR |= 0x40;                           //定时器1时钟为Fosc,即1T
  43   1      //      AUXR &= 0xfe;                           //串口1选择定时器1为波特率发生器
  44   1      //      TL1 = 0xF7;                             //设定定时初值
  45   1      //      TH1 = 0xF7;                             //设定定时器重装值
  46   1      //
  47   1      //
  48   1      //      ET1  = 0;                       //close timer1 interrupt
  49   1      //      TR1  = 1;                           //open timer1
  50   1              ES   = 1;                                       //Enabled serial port interrrup 
  51   1              EA=1;
  52   1      
  53   1      }
  54          /*******************************************************************************
C51 COMPILER V9.00   UART                                                                  07/20/2016 15:45:35 PAGE 2   

  55                                                                  串口1初始化
  56                  input :     none
  57                  default:
  58                      data bits:  8
  59                      start bits: 1
  60                      stop bits:  1
  61                      parity:     NONE                                    
  62          *******************************************************************************/
  63          void UART485_Init(void)
  64          {
  65   1              InitT485();
  66   1              uart.rIndex = 0;
  67   1              uart.rFlag  = 0;
  68   1              uart.rTimer = 0;        
  69   1      }
  70          
  71          /*******************************************************************************
  72                                                           串口1中断函数
  73          *******************************************************************************/
  74          void SCON485_int (void) interrupt 4 using 1
  75          {
  76   1              if (RI)
  77   1          {
  78   2                      RI = 0;
  79   2              //SBUF=SBUF; 
  80   2                      if ( uart.rIndex >= UART_BUF_LEN ) return;
  81   2                      if(uart.rFlag == ON)
  82   2                              return;
  83   2                      uart.rBuffer[uart.rIndex++] = SBUF;     
  84   2                      uart.rTimer = RCV_OVER_TIMER;
  85   2              }
  86   1      
  87   1      }
  88          
  89          
  90          ////////////////////////////////////////////////////////////////////////////////
  91          // 功能描述 : 串口1发送一个字节数据
  92          // 输入参数 : 
  93          // 返回参数 : 
  94          // 说明     :  
  95          ////////////////////////////////////////////////////////////////////////////////
  96          void Usart1_SendByte(UINT8 byte)
  97          {
  98   1                      while(TI);
  99   1                      SBUF = byte;           
 100   1                      while(!TI);
 101   1                      TI=0;             
 102   1      }
 103          /***********************************************
 104                  串口发送程序
 105          input :     *Ram    
 106                      len     
 107          output :    NONE
 108          ***********************************************/
 109          void Send485SeriaDate(UINT8 *Ram, UINT16 len)
 110          {
 111   1          UINT8 ite;
 112   1              
 113   1              M485_CTRL_ON;
 114   1              LED_TXD485_ON;
 115   1              _nop_();
 116   1              _nop_();
C51 COMPILER V9.00   UART                                                                  07/20/2016 15:45:35 PAGE 3   

 117   1              for(ite=0;ite<len;ite++)
 118   1              {
 119   2                      Usart1_SendByte(Ram[ite]);
 120   2              }
 121   1              _nop_();
 122   1              _nop_();
 123   1              M485_CTRL_OFF;
 124   1              LED_TXD485_OFF;
 125   1          _nop_();
 126   1          _nop_();
 127   1      
 128   1      }
 129          ///////////////////////////////////////////////--UART232--配置--////////////////////////////////
 130          
 131          /***************************************************
 132                          UART2初始化
 133          ***************************************************/
 134          //void InitT232(void)
 135          //{
 136          //      //扫描枪串口配置:8BIT数据位、无奇偶校验、1位停止位
 137          //      #if (PARITYBIT232 == NONE_PARITY)
 138          //        S2CON = 0x5A;               //8位可变波特率 (无校验位)
 139          //      #elif (PARITYBIT232 == ODD_PARITY) || (PARITYBIT == EVEN_PARITY) || (PARITYBIT == MARK_PARITY)
 140          //        S2CON = 0xda;               //9位可变波特率,校验位初始为1
 141          //      #elif (PARITYBIT232 == SPACE_PARITY)
 142          //        S2CON = 0xd5;               //9位可变波特率,校验位初始为0
 143          //      #endif
 144          //    
 145          //      switch (baudrate)
 146          //      {
 147          //              case BD_4800:
 148          //                      BRT = -(FOSC/32/BD232_4800);      //设置独立波特率发生器的重载初值
 149          //                      break;
 150          //              case BD_9600:
 151          //                      BRT = -(FOSC/32/BD232_9600);      //设置独立波特率发生器的重载初值
 152          //                      break;
 153          //              case BD_19200:
 154          //                      BRT = -(FOSC/32/BD232_19200);      //设置独立波特率发生器的重载初值
 155          //                      PCON |= 0x80;
 156          //                      break;
 157          //              case BD_38400:
 158          //                      BRT = -(FOSC/32/BD232_38400);      //设置独立波特率发生器的重载初值
 159          //                      break;
 160          //              default:
 161          //                      BRT = -(FOSC/32/BD232_9600);      //设置独立波特率发生器的重载初值
 162          //                      break;
 163          //        }
 164          //        AUXR = 0x14;                //独立波特率发生器工作在1T模式
 165          //        IE2 = 0x01;                 //使能串口2中断   
 166          //    return;
 167          //}
 168          /*******************************************************************************
 169                                                                  串口初始化
 170                  input :     none
 171                  default:
 172                      data bits:  8
 173                      start bits: 1
 174                      stop bits:  1
 175                      parity:     NONE                                    
 176          *******************************************************************************/
 177          //void UART232_Init(void)
 178          //{
C51 COMPILER V9.00   UART                                                                  07/20/2016 15:45:35 PAGE 4   

 179          //      InitT232();
 180          //      uart232.rIndex = 0;
 181          //      uart232.rFlag  = 0;
 182          //      uart232.rTimer = 0;     
 183          //}
 184          
 185          /*******************************************************************************
 186                                                           扫描枪串口中断函数
 187                                          
 188          *******************************************************************************/
 189          //void SCON232_int (void) interrupt 8
 190          //{    
 191          //      if(uart232.rFlag == ON)
 192          //      {
 193          //              uart232.rFlag   = OFF;
 194          //              uart232.rIndex  = 0;
 195          //              InTemp = 0;
 196          //      }
 197          //      // 接收中断
 198          //      if(S2CON & S2RI) 
 199          //      {
 200          //              S2CON &= ~S2RI;         //清除接收完成标志                 
 201          //              if ( uart232.rIndex >= UART232_BUF_LEN )
 202          //                      return;
 203          //              uart232.rBuffer[uart232.rIndex++] = S2BUF;      
 204          //              uart232.rTimer = RCV_OVER_TIMER232;        
 205          //      }
 206          //    //发送完成中断
 207          //      if (S2CON & S2TI)
 208          //      {
 209          //              S2CON &= ~S2TI;         //清除发送完成标志
 210          //              busy = 0;
 211          //      }
 212          //}
 213          
 214          /*******************************************************************************
 215                                                                          END                                     
 216          *******************************************************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    195    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    106       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
