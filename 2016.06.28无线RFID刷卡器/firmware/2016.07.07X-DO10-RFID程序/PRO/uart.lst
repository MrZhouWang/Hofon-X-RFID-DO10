C51 COMPILER V9.52.0.0   UART                                                              08/18/2016 09:16:05 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN ..\OUT\uart.obj
COMPILER INVOKED BY: C:\Program Files\kile\C51\BIN\C51.EXE ..\SRC\uart.c LARGE OMF2 BROWSE INCDIR(..\SRC;..\INC;..\PRO) 
                    -DEBUG PRINT(.\uart.lst) TABS(2) OBJECT(..\OUT\uart.obj)

line level    source

   1          #include "include.h"
   2          
   3          volatile OS_UART xdata uart;
   4          volatile OS_UART xdata uart232;
   5          volatile UINT8 InTemp;
   6          bit busy;
   7          
   8          #define RCV_OVER_TIMER          2
   9          #define RCV_OVER_TIMER232   2
  10          extern void Serial232PutChar(UINT8 dat);
  11          extern void Send485SerialByte(UINT8 *Ram, UINT16 len);
  12          
  13          
  14          /***************************************************
  15              UART1初始化
  16                                  7     6     5     4     3     2     1     0     Reset Value
  17          sfr SCON = 0x98; //Serial Control         SM0/FE SM1   SM2   REN   TB8   RB8    TI    RI    0000,0000
  18          SM0 SM1:
  19           0   0         同步移位寄存器   fosc/12
  20           0   1       10位异步收发         由定时器控制
  21           1   0         11位异步收发     fosc/32或fosc/64
  22           1   1         11位异步收发         由定时器控制
  23          P = PSW.0      P=1奇   P=0偶
  24          ***************************************************/
  25          void InitT485(void)
  26          {
  27   1      //    SCON  = 0x50;  //配置串口为模式1
  28   1      //    TMOD &= 0x0F;  //清零T1的控制位
  29   1      //    TMOD |= 0x20;  //配置T1为模式2
  30   1      //    TH1 = 256 - (11059200/12/32)/9600;  //计算T1重载值
  31   1      //    TL1 = TH1;     //初值等于重载值
  32   1      //    ET1 = 0;       //禁止T1中断
  33   1      //    ES  = 1;       //使能串口中断
  34   1      //    TR1 = 1;       //启动T1
  35   1      
  36   1      
  37   1        TMOD = (TMOD & 0x0f) | 0x20;  //8位自动重载定时器
  38   1        SCON = 0xd0;              //串行口工作模式3选择
  39   1        IP   = 0x10;            //PS set the high
  40   1        PCON  &= 0x7f;                  //SOMD =0
  41   1      
  42   1        //波特率 38400
  43   1        AUXR |= 0x40;             //定时器1时钟为Fosc,即1T
  44   1        AUXR &= 0xfe;             //串口1选择定时器1为波特率发生器
  45   1        TL1 = 0xF7;                 //设定定时初值
  46   1        TH1 = 0xF7;                 //设定定时器重装值
  47   1      
  48   1      
  49   1        ET1  = 0;                       //close timer1 interrupt
  50   1        TR1  = 1;                     //open timer1
  51   1        ES   = 1;               //Enabled serial port interrrup 
  52   1      
  53   1      
  54   1      }
C51 COMPILER V9.52.0.0   UART                                                              08/18/2016 09:16:05 PAGE 2   

  55          /*******************************************************************************
  56                        串口1初始化
  57            input :     none
  58            default:
  59                data bits:  8
  60                start bits: 1
  61                stop bits:  1
  62                parity:     NONE          
  63          *******************************************************************************/
  64          void UART485_Init(void)
  65          {
  66   1        InitT485();
  67   1        uart.rIndex = 0;
  68   1        uart.rFlag  = 0;
  69   1        uart.rTimer = 0;  
  70   1      }
  71          
  72          /*******************************************************************************
  73                       串口1中断函数
  74          *******************************************************************************/
  75          void SCON485_int (void) interrupt 4
  76          {
  77   1        if (RI)
  78   1          {
  79   2          RI = 0;
  80   2               
  81   2          if ( uart.rIndex >= UART_BUF_LEN ) return;
  82   2          if(uart.rFlag == ON)
  83   2            return;
  84   2          //  SBUF=SBUF;
  85   2          uart.rBuffer[uart.rIndex++] = SBUF; 
  86   2          uart.rTimer = RCV_OVER_TIMER;
  87   2        }
  88   1      }
  89          /***********************************************
  90                  串口发送程序
  91          input :     *Ram    
  92                      len     
  93          output :    NONE
  94          ***********************************************/
  95          void Send485SerialByte(UINT8 *Ram, UINT16 len)
  96          {
  97   1        LED_TXD485_ON;
  98   1        M485_CTRL_ON;
  99   1        for(;len>0;len--)
 100   1        {
 101   2          ACC = *Ram;
 102   2      //    if(P == 0)
 103   2      //    {
 104   2      //      TB8 = 0;
 105   2      //    }
 106   2      //    else
 107   2      //    {
 108   2      //      TB8 =1;
 109   2      //    }
 110   2      
 111   2          SBUF = *Ram;           
 112   2          while(!TI){;}             
 113   2          TI = 0;
 114   2          Ram++;
 115   2        }
 116   1        M485_CTRL_OFF;
C51 COMPILER V9.52.0.0   UART                                                              08/18/2016 09:16:05 PAGE 3   

 117   1        LED_TXD485_OFF;
 118   1      
 119   1      }
 120          ///////////////////////////////////////////////--UART232--配置--////////////////////////////////
 121          
 122          /***************************************************
 123              UART2初始化
 124          ***************************************************/
 125          void InitT232(void)
 126          {
 127   1        //扫描枪串口配置:8BIT数据位、无奇偶校验、1位停止位
 128   1        #if (PARITYBIT232 == NONE_PARITY)
 129   1              S2CON = 0x5A;               //8位可变波特率 (无校验位)
 130   1        #elif (PARITYBIT232 == ODD_PARITY) || (PARITYBIT == EVEN_PARITY) || (PARITYBIT == MARK_PARITY)
                      S2CON = 0xda;               //9位可变波特率,校验位初始为1
                #elif (PARITYBIT232 == SPACE_PARITY)
                      S2CON = 0xd5;               //9位可变波特率,校验位初始为0
                #endif
 135   1          
 136   1        switch (baudrate)
 137   1        {
 138   2          case BD_4800:
 139   2            BRT = -(FOSC/32/BD232_4800);      //设置独立波特率发生器的重载初值
 140   2            break;
 141   2          case BD_9600:
 142   2            BRT = -(FOSC/32/BD232_9600);      //设置独立波特率发生器的重载初值
 143   2            break;
 144   2          case BD_19200:
 145   2            BRT = -(FOSC/32/BD232_19200);      //设置独立波特率发生器的重载初值
 146   2            PCON |= 0x80;
 147   2            break;
 148   2          case BD_38400:
 149   2            BRT = -(FOSC/32/BD232_38400);      //设置独立波特率发生器的重载初值
 150   2            break;
 151   2          default:
 152   2            BRT = -(FOSC/32/BD232_9600);      //设置独立波特率发生器的重载初值
 153   2            break;
 154   2              }
 155   1              AUXR = 0x14;                //独立波特率发生器工作在1T模式
 156   1              IE2 = 0x01;                 //使能串口2中断 
 157   1          return;
 158   1      }
 159          /*******************************************************************************
 160                        串口初始化
 161            input :     none
 162            default:
 163                data bits:  8
 164                start bits: 1
 165                stop bits:  1
 166                parity:     NONE          
 167          *******************************************************************************/
 168          void UART232_Init(void)
 169          {
 170   1        InitT232();
 171   1        uart232.rIndex = 0;
 172   1        uart232.rFlag  = 0;
 173   1        uart232.rTimer = 0; 
 174   1      }
 175          
 176          /*******************************************************************************
 177                       扫描枪串口中断函数
 178                  
C51 COMPILER V9.52.0.0   UART                                                              08/18/2016 09:16:05 PAGE 4   

 179          *******************************************************************************/
 180          void SCON232_int (void) interrupt 8
 181          {    
 182   1        if(uart232.rFlag == ON)
 183   1        {
 184   2          uart232.rFlag   = OFF;
 185   2          uart232.rIndex  = 0;
 186   2          InTemp = 0;
 187   2        }
 188   1        // 接收中断
 189   1        if(S2CON & S2RI) 
 190   1        {
 191   2          S2CON &= ~S2RI;         //清除接收完成标志                 
 192   2          if ( uart232.rIndex >= UART232_BUF_LEN )
 193   2            return;
 194   2          uart232.rBuffer[uart232.rIndex++] = S2BUF;  
 195   2          uart232.rTimer = RCV_OVER_TIMER232;        
 196   2        }
 197   1          //发送完成中断
 198   1        if (S2CON & S2TI)
 199   1        {
 200   2          S2CON &= ~S2TI;         //清除发送完成标志
 201   2          busy = 0;
 202   2        }
 203   1      }
 204          
 205          /*******************************************************************************
 206                          END         
 207          *******************************************************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    332    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    211    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
