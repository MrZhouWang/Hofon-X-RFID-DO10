C51 COMPILER V9.00   UART                                                                  07/20/2016 13:38:27 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN ..\OUT\uart.obj
COMPILER INVOKED BY: C:\C51\BIN\C51.EXE ..\SRC\uart.c LARGE BROWSE INCDIR(..\INC;..\PRO;..\SRC) DEBUG OBJECTEXTEND PRINT
                    -(.\uart.lst) OBJECT(..\OUT\uart.obj)

line level    source

   1          #include "include.h"
   2          
   3          volatile OS_UART xdata uart;
   4          volatile OS_UART xdata uart232;
   5          volatile UINT8 InTemp;
   6          bit busy;
   7          
   8          #define RCV_OVER_TIMER          2
   9          #define RCV_OVER_TIMER232               2
  10          extern void Serial232PutChar(UINT8 dat);
  11          extern void Send485SerialByte(UINT8 *Ram, UINT16 len);
  12          
  13          
  14          /***************************************************
  15                          UART1初始化
  16                                                                                                  7     6     5     4     3     2     1     0     Reset Value
  17          sfr SCON = 0x98; //Serial Control         SM0/FE SM1   SM2   REN   TB8   RB8    TI    RI    0000,0000
  18          SM0 SM1:
  19           0   0         同步移位寄存器           fosc/12
  20           0   1             10位异步收发         由定时器控制
  21           1   0         11位异步收发             fosc/32或fosc/64
  22           1   1         11位异步收发         由定时器控制
  23          P = PSW.0      P=1奇   P=0偶
  24          ***************************************************/
  25          void InitT485(void)
  26          {
  27   1          SCON  = 0x50;  //配置串口为模式1
  28   1          TMOD &= 0x0F;  //清零T1的控制位
  29   1          TMOD |= 0x20;  //配置T1为模式2
  30   1          TH1 = 256 - (11059200/12/32)/9600;  //计算T1重载值
  31   1          TL1 = TH1;     //初值等于重载值
  32   1          ET1 = 0;       //禁止T1中断
  33   1          ES  = 1;       //使能串口中断
  34   1          TR1 = 1;       //启动T1
  35   1              RI=1;
  36   1      
  37   1      
  38   1      
  39   1      //      TMOD = (TMOD & 0x0f) | 0x20;    //8位自动重载定时器
  40   1      //      SCON = 0xd0;                            //串行口工作模式3选择
  41   1      //      IP   = 0x10;                                //PS set the high
  42   1      //      PCON  &= 0x7f;                  //SOMD =0
  43   1      //
  44   1      //      //波特率 38400
  45   1      //      AUXR |= 0x40;                           //定时器1时钟为Fosc,即1T
  46   1      //      AUXR &= 0xfe;                           //串口1选择定时器1为波特率发生器
  47   1      //      TL1 = 0xF7;                             //设定定时初值
  48   1      //      TH1 = 0xF7;                             //设定定时器重装值
  49   1      //
  50   1      //
  51   1      //      ET1  = 0;                       //close timer1 interrupt
  52   1      //      TR1  = 1;                           //open timer1
  53   1      //      ES   = 1;                                       //Enabled serial port interrrup 
  54   1      //      EA=1;
C51 COMPILER V9.00   UART                                                                  07/20/2016 13:38:27 PAGE 2   

  55   1      
  56   1      }
  57          /*******************************************************************************
  58                                                                  串口1初始化
  59                  input :     none
  60                  default:
  61                      data bits:  8
  62                      start bits: 1
  63                      stop bits:  1
  64                      parity:     NONE                                    
  65          *******************************************************************************/
  66          void UART485_Init(void)
  67          {
  68   1              InitT485();
  69   1              uart.rIndex = 0;
  70   1              uart.rFlag  = 0;
  71   1              uart.rTimer = 0;        
  72   1      }
  73          
  74          /*******************************************************************************
  75                                                           串口1中断函数
  76          *******************************************************************************/
  77          void SCON485_int (void) interrupt 4
  78          {
  79   1              if (RI)
  80   1          {
  81   2                      RI = 0;
  82   2               
  83   2                      if ( uart.rIndex >= UART_BUF_LEN ) return;
  84   2                      if(uart.rFlag == ON)
  85   2                              return;
  86   2                      //      SBUF=SBUF;
  87   2                      uart.rBuffer[uart.rIndex++] = SBUF;     
  88   2                      uart.rTimer = RCV_OVER_TIMER;
  89   2              }
  90   1      }
  91          /***********************************************
  92                  串口发送程序
  93          input :     *Ram    
  94                      len     
  95          output :    NONE
  96          ***********************************************/
  97          void Send485SerialByte(UINT8 *Ram, UINT16 len)
  98          {
  99   1              LED_TXD485_ON;
 100   1              M485_CTRL_ON;
 101   1              for(;len>0;len--)
 102   1              {
 103   2                      //ACC = *Ram;
 104   2      //              if(P == 0)
 105   2      //              {
 106   2      //                      TB8 = 0;
 107   2      //              }
 108   2      //              else
 109   2      //              {
 110   2      //                      TB8 =1;
 111   2      //              }
 112   2      
 113   2                      SBUF = *Ram;           
 114   2                      while(!TI){;}             
 115   2                      TI = 0;
 116   2                      Ram++;
C51 COMPILER V9.00   UART                                                                  07/20/2016 13:38:27 PAGE 3   

 117   2              }
 118   1              M485_CTRL_OFF;
 119   1              LED_TXD485_OFF;
 120   1      
 121   1      }
 122          ///////////////////////////////////////////////--UART232--配置--////////////////////////////////
 123          
 124          /***************************************************
 125                          UART2初始化
 126          ***************************************************/
 127          void InitT232(void)
 128          {
 129   1              //扫描枪串口配置:8BIT数据位、无奇偶校验、1位停止位
 130   1              #if (PARITYBIT232 == NONE_PARITY)
 131   1              S2CON = 0x5A;               //8位可变波特率 (无校验位)
 132   1              #elif (PARITYBIT232 == ODD_PARITY) || (PARITYBIT == EVEN_PARITY) || (PARITYBIT == MARK_PARITY)
                      S2CON = 0xda;               //9位可变波特率,校验位初始为1
                      #elif (PARITYBIT232 == SPACE_PARITY)
                      S2CON = 0xd5;               //9位可变波特率,校验位初始为0
                      #endif
 137   1          
 138   1              switch (baudrate)
 139   1              {
 140   2                      case BD_4800:
 141   2                              BRT = -(FOSC/32/BD232_4800);      //设置独立波特率发生器的重载初值
 142   2                              break;
 143   2                      case BD_9600:
 144   2                              BRT = -(FOSC/32/BD232_9600);      //设置独立波特率发生器的重载初值
 145   2                              break;
 146   2                      case BD_19200:
 147   2                              BRT = -(FOSC/32/BD232_19200);      //设置独立波特率发生器的重载初值
 148   2                              PCON |= 0x80;
 149   2                              break;
 150   2                      case BD_38400:
 151   2                              BRT = -(FOSC/32/BD232_38400);      //设置独立波特率发生器的重载初值
 152   2                              break;
 153   2                      default:
 154   2                              BRT = -(FOSC/32/BD232_9600);      //设置独立波特率发生器的重载初值
 155   2                              break;
 156   2              }
 157   1              AUXR = 0x14;                //独立波特率发生器工作在1T模式
 158   1              IE2 = 0x01;                 //使能串口2中断     
 159   1          return;
 160   1      }
 161          /*******************************************************************************
 162                                                                  串口初始化
 163                  input :     none
 164                  default:
 165                      data bits:  8
 166                      start bits: 1
 167                      stop bits:  1
 168                      parity:     NONE                                    
 169          *******************************************************************************/
 170          void UART232_Init(void)
 171          {
 172   1              InitT232();
 173   1              uart232.rIndex = 0;
 174   1              uart232.rFlag  = 0;
 175   1              uart232.rTimer = 0;     
 176   1      }
 177          
 178          /*******************************************************************************
C51 COMPILER V9.00   UART                                                                  07/20/2016 13:38:27 PAGE 4   

 179                                                           扫描枪串口中断函数
 180                                          
 181          *******************************************************************************/
 182          void SCON232_int (void) interrupt 8
 183          {    
 184   1              if(uart232.rFlag == ON)
 185   1              {
 186   2                      uart232.rFlag   = OFF;
 187   2                      uart232.rIndex  = 0;
 188   2                      InTemp = 0;
 189   2              }
 190   1              // 接收中断
 191   1              if(S2CON & S2RI) 
 192   1              {
 193   2                      S2CON &= ~S2RI;         //清除接收完成标志                 
 194   2                      if ( uart232.rIndex >= UART232_BUF_LEN )
 195   2                              return;
 196   2                      uart232.rBuffer[uart232.rIndex++] = S2BUF;      
 197   2                      uart232.rTimer = RCV_OVER_TIMER232;        
 198   2              }
 199   1          //发送完成中断
 200   1              if (S2CON & S2TI)
 201   1              {
 202   2                      S2CON &= ~S2TI;         //清除发送完成标志
 203   2                      busy = 0;
 204   2              }
 205   1      }
 206          
 207          /*******************************************************************************
 208                                                                          END                                     
 209          *******************************************************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    314    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    211    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
