C51 COMPILER V9.00   MAIN                                                                  07/20/2016 14:33:00 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\OUT\MAIN.obj
COMPILER INVOKED BY: C:\C51\BIN\C51.EXE ..\SRC\MAIN.C OMF2 BROWSE INCDIR(..\INC;..\SRC;..\PRO) DEBUG PRINT(.\MAIN.lst) O
                    -BJECT(..\OUT\MAIN.obj)

line level    source

   1          /**********************RC522ÊµÑé¿ª·¢°åÀý³Ì************************
   2          *  CPU:STC89C52RC
   3          *  ¾§Õñ:11.0592MHZ
   4          ------------------------------------------------*/
   5          #include "include.h"
   6          
   7          
   8          unsigned char code data1[16] = {0x12,0x34,0x56,0x78,0xED,0xCB,0xA9,0x87,0x12,0x34,0x56,0x78,0x01,0xFE,0x01
             -,0xFE};
   9          //M1¿¨µÄÄ³Ò»¿éÐ´ÎªÈçÏÂ¸ñÊ½£¬Ôò¸Ã¿éÎªÇ®°ü£¬¿É½ÓÊÕ¿Û¿îºÍ³äÖµÃüÁî
  10          //4×Ö½Ú½ð¶î£¨µÍ×Ö½ÚÔÚÇ°£©£«4×Ö½Ú½ð¶îÈ¡·´£«4×Ö½Ú½ð¶î£«1×Ö½Ú¿éµØÖ·£«1×Ö½Ú¿éµØÖ·È¡·´£«1×Ö½Ú¿éµØÖ·£«1×Ö½Ú¿éµØÖ
             -·È¡·´ 
  11          unsigned char code data2[4]  = {0,0,0,0x01};
  12          unsigned char code DefaultKey[6] = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}; 
  13          
  14          unsigned char g_ucTempbuf[20];                        
  15          void delay1(unsigned int z)
  16          {
  17   1              unsigned int x,y;
  18   1              for(x=z;x>0;x--)
  19   1              for(y=110;y>0;y--);     
  20   1      }  
  21          void delay_ms(unsigned int z)
  22          {
  23   1              unsigned int x,y;
  24   1              for(x=z;x>0;x--)
  25   1              for(y=125;y>0;y--);     
  26   1      } 
  27            void led_on()
  28          {
  29   1              LED4=0;
  30   1              LED6=0;
  31   1              LED5=0 ;
  32   1      }
  33          void led_off()
  34          {
  35   1              LED4=1;
  36   1              LED6=1;
  37   1              LED5=1 ;
  38   1      }
  39          void led_blink()
  40          {
  41   1              led_on();
  42   1              delay1(1000);
  43   1              led_off();
  44   1              delay1(1000);
  45   1      }
  46          ////////////////////////////////////////////////////////////////////////////////
  47          // ¹¦ÄÜÃèÊö : Ö÷º¯Êý  
  48          // ÊäÈë²ÎÊý : ÎÞ
  49          // ·µ»Ø²ÎÊý : ÎÞ
  50          // ËµÃ÷     :
  51          ////////////////////////////////////////////////////////////////////////////////
  52          void main( )
C51 COMPILER V9.00   MAIN                                                                  07/20/2016 14:33:00 PAGE 2   

  53          {    
  54   1           unsigned char status,i;
  55   1               unsigned int temp;
  56   1           InitializeSystem( );
  57   1           PcdReset();
  58   1           PcdAntennaOff(); 
  59   1           PcdAntennaOn(); 
  60   1           while ( 1 )
  61   1           {   
  62   2               status = PcdRequest(PICC_REQALL, g_ucTempbuf);//Ñ°¿¨
  63   2               if (status != MI_OK)
  64   2               {    
  65   3                    InitializeSystem( );
  66   3                    PcdReset();
  67   3                    PcdAntennaOff(); 
  68   3                    PcdAntennaOn(); 
  69   3                                led_on();
  70   3                                continue;
  71   3               }
  72   2                       else
  73   2                       {
  74   3                            led_blink();
  75   3      
  76   3                       }           
  77   2      //               printf("¿¨µÄÀàÐÍ:");
  78   2      //         for(i=0;i<2;i++)
  79   2      //               {
  80   2      //                   temp=g_ucTempbuf[i];
  81   2      //                   printf("%X",temp); 
  82   2      //               }
  83   2      //                      
  84   2               status = PcdAnticoll(g_ucTempbuf);//·À³å×²
  85   2               if (status != MI_OK)
  86   2               { 
  87   3                           continue;    
  88   3                   }        
  89   2                                      
  90   2      //               printf("¿¨ÐòÁÐºÅ£º");  //³¬¼¶ÖÕ¶ËÏÔÊ¾,
  91   2      //               for(i=0;i<4;i++)
  92   2      //               {
  93   2      //                       temp=g_ucTempbuf[i];
  94   2      //                       printf("%X",temp);                     
  95   2      //               }
  96   2      
  97   2               status = PcdSelect(g_ucTempbuf);//Ñ¡¶¨¿¨Æ¬
  98   2               if (status != MI_OK)
  99   2               { 
 100   3                           continue;    
 101   3                       }
 102   2               status = PcdAuthState(PICC_AUTHENT1A, 1, DefaultKey, g_ucTempbuf);//ÑéÖ¤¿¨Æ¬ÃÜÂë
 103   2               if (status != MI_OK)
 104   2               {   
 105   3                               continue;    
 106   3                       }
 107   2               
 108   2               status = PcdWrite(1, data1);//Ð´¿é
 109   2               if (status != MI_OK)
 110   2               {  
 111   3                          continue;
 112   3                   }
 113   2               while(1)
 114   2                       {
C51 COMPILER V9.00   MAIN                                                                  07/20/2016 14:33:00 PAGE 3   

 115   3                      status = PcdRequest(PICC_REQALL, g_ucTempbuf);//Ñ°¿¨
 116   3                      if (status != MI_OK)
 117   3                      {   
 118   4                                InitializeSystem( );
 119   4                        PcdReset();
 120   4                        PcdAntennaOff(); 
 121   4                        PcdAntennaOn(); 
 122   4                                    continue;
 123   4                  }
 124   3                         status = PcdAnticoll(g_ucTempbuf);//·À³å×²
 125   3                 if (status != MI_OK)
 126   3                 {    
 127   4                                      continue;  
 128   4                         }
 129   3                         status = PcdSelect(g_ucTempbuf);//Ñ¡¶¨¿¨Æ¬
 130   3                 if (status != MI_OK)
 131   3                 {  
 132   4                              continue;   
 133   4                         }
 134   3               
 135   3                 status = PcdAuthState(PICC_AUTHENT1A, 1, DefaultKey, g_ucTempbuf);//ÑéÖ¤¿¨Æ¬ÃÜÂë
 136   3                 if (status != MI_OK)
 137   3                 {  
 138   4                              continue;    
 139   4                     }
 140   3      
 141   3      
 142   3                 status = PcdValue(PICC_DECREMENT,1,data2);//¿Û¿î
 143   3                 if (status != MI_OK)
 144   3                 {   
 145   4                              continue;   
 146   4                         }
 147   3                       
 148   3                 status = PcdBakValue(1, 2);//¿é±¸·Ý
 149   3                 if (status != MI_OK)
 150   3                 {   
 151   4                                  continue;    
 152   4                         }
 153   3               
 154   3                 status = PcdRead(7, g_ucTempbuf);//¶Á¿é
 155   3                 if (status != MI_OK)
 156   3                 {  
 157   4                              continue;   
 158   4                         }
 159   3      //           printf("¿¨¶Á¿é£º");        //³¬¼¶ÖÕ¶ËÏÔÊ¾,
 160   3      //           for(i=0;i<16;i++)
 161   3      //                 {
 162   3      //                              temp=g_ucTempbuf[i];
 163   3      //                              printf("%X",temp);
 164   3      //                                              
 165   3      //                 }
 166   3      
 167   3      //                 printf("\n");
 168   3                              PcdHalt();
 169   3                         led_on();
 170   3                         delay_ms(100);
 171   3                         led_off();
 172   3                     delay_ms(100);
 173   3                         led_on();
 174   3                         delay_ms(100);
 175   3                         led_off();                                                    
 176   3                         
C51 COMPILER V9.00   MAIN                                                                  07/20/2016 14:33:00 PAGE 4   

 177   3                      }
 178   2          }
 179   1      }
*** WARNING C280 IN LINE 54 OF ..\SRC\MAIN.C: 'i': unreferenced local variable
*** WARNING C280 IN LINE 55 OF ..\SRC\MAIN.C: 'temp': unreferenced local variable
 180          
 181          
 182          ////////////////////////////////////////////////////////////////////////////////
 183          // ¹¦ÄÜÃèÊö £ºÏµÍ³³õÊ¼»¯  
 184          // ÊäÈë²ÎÊý : ÎÞ
 185          // ·µ»Ø²ÎÊý : ÎÞ
 186          // ËµÃ÷     : ¸÷ÖÖ³õÊ¼»¯
 187          ////////////////////////////////////////////////////////////////////////////////
 188          void InitializeSystem()
 189          {
 190   1      /*      P0M1 = 0x0; P0M2 = 0x0;
 191   1              P1M1 = 0x0;     P1M2 = 0x0;                      
 192   1              P3M1 = 0x0; P3M2 = 0xFF; 
 193   1      */      P0 = 0xFF; P1 = 0xFF; P3 = 0xFF;P2 = 0xFF;
 194   1      
 195   1              TMOD=0x21;                 //ÉèT0Îª·½Ê½1£¬GATE=1£»
 196   1              SCON=0x50;
 197   1              TH1=0xFD;          //²¨ÌØÂÊÎª2400bps
 198   1              TL1=0xFD;
 199   1              TH0=0;
 200   1              TL0=0; 
 201   1              TR0=1;  
 202   1              ET0=1;             //ÔÊÐíT0ÖÐ¶Ï
 203   1              TR1=1;                     //¿ªÆô¶¨Ê±Æ÷
 204   1              TI=1;
 205   1              EA=1;                           //¿ªÆô×ÜÖÐ¶Ï
 206   1              
 207   1              ES = 1;
 208   1              RI = 1;
 209   1      
 210   1       
 211   1      }
 212          
 213          
 214          
 215             
 216            
 217          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    431    ----
   CONSTANT SIZE    =     26    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     20       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
