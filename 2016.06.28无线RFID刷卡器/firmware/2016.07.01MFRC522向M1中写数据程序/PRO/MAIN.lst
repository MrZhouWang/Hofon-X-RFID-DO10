C51 COMPILER V9.00   MAIN                                                                  07/15/2016 17:32:16 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\OUT\MAIN.obj
COMPILER INVOKED BY: C:\C51\BIN\C51.EXE ..\SRC\MAIN.C OMF2 BROWSE INCDIR(..\INC;..\SRC;..\PRO) DEBUG PRINT(.\MAIN.lst) O
                    -BJECT(..\OUT\MAIN.obj)

line level    source

   1          /**********************RC522ÊµÑé¿ª·¢°åÀý³Ì************************
   2          *  CPU:STC89C52RC
   3          *  ¾§Õñ:11.0592MHZ
   4          ------------------------------------------------*/
   5          #define MAIN_GLOBAL
   6          #include "include.h"
   7          unsigned char con_flag;
   8          
   9          unsigned char code data1[7] = {1,2,3,4,5,6,7};
  10          //M1¿¨µÄÄ³Ò»¿éÐ´ÎªÈçÏÂ¸ñÊ½£¬Ôò¸Ã¿éÎªÇ®°ü£¬¿É½ÓÊÕ¿Û¿îºÍ³äÖµÃüÁî
  11          //4×Ö½Ú½ð¶î£¨µÍ×Ö½ÚÔÚÇ°£©£«4×Ö½Ú½ð¶îÈ¡·´£«4×Ö½Ú½ð¶î£«1×Ö½Ú¿éµØÖ·£«1×Ö½Ú¿éµØÖ·È¡·´£«1×Ö½Ú¿éµØÖ·£«1×Ö½Ú¿éµØÖ
             -·È¡·´ 
  12          unsigned char code data2[4]  = {0,0,0,0x01};
  13          unsigned char code DefaultKey[6] = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}; 
  14          
  15          unsigned char g_ucTempbuf[20];
  16          void led_blink();
  17          void delay_ms(unsigned int z);
  18          void led_off();
  19          void led_on();  
  20          ////////////////////////////////////////////////////////////////////////////////
  21          // ¹¦ÄÜÃèÊö : Ö÷º¯Êý  
  22          // ÊäÈë²ÎÊý : ÎÞ
  23          // ·µ»Ø²ÎÊý : ÎÞ
  24          // ËµÃ÷     :
  25          ////////////////////////////////////////////////////////////////////////////////
  26          void main( )
  27          {    
  28   1           unsigned char status,i,m;
  29   1               unsigned int temp;
  30   1           InitializeSystem( );
  31   1           PcdReset();
  32   1           PcdAntennaOff(); 
  33   1           PcdAntennaOn(); 
  34   1           while ( 1 )
  35   1           {   
  36   2               status = PcdRequest(PICC_REQALL, g_ucTempbuf);//Ñ°¿¨
  37   2               if (status != MI_OK)
  38   2               {    
  39   3                    InitializeSystem( );
  40   3                    PcdReset();
  41   3                    PcdAntennaOff(); 
  42   3                    PcdAntennaOn(); 
  43   3                                led_on();
  44   3                                continue;
  45   3               }        
  46   2                       else
  47   2                       {
  48   3                              led_off();
  49   3                       }   
  50   2      //               printf("¿¨µÄÀàÐÍ:");
  51   2      //               led_on();
  52   2      //         for(i=0;i<2;i++)
  53   2      //               {
C51 COMPILER V9.00   MAIN                                                                  07/15/2016 17:32:16 PAGE 2   

  54   2      //                   temp=g_ucTempbuf[i];
  55   2      //                   printf("%X",temp); 
  56   2      //               }
  57   2                              
  58   2               status = PcdAnticoll(g_ucTempbuf);//·À³å×²
  59   2               if (status != MI_OK)
  60   2               { 
  61   3                           continue;    
  62   3                   }        
  63   2                                      
  64   2      //               printf("¿¨ÐòÁÐºÅ£º");  //³¬¼¶ÖÕ¶ËÏÔÊ¾,
  65   2      //               for(i=0;i<4;i++)
  66   2      //               {
  67   2      //                       temp=g_ucTempbuf[i];
  68   2      //                       printf("%X",temp);                     
  69   2      //               }
  70   2      
  71   2               status = PcdSelect(g_ucTempbuf);//Ñ¡¶¨¿¨Æ¬
  72   2               if (status != MI_OK)
  73   2               { 
  74   3                           continue;    
  75   3                       }
  76   2               status = PcdAuthState(PICC_AUTHENT1A, 1, DefaultKey, g_ucTempbuf);//ÑéÖ¤¿¨Æ¬ÃÜÂë
  77   2               if (status != MI_OK)
  78   2               {   
  79   3                               continue;    
  80   3                       }
  81   2               
  82   2               status = PcdWrite(1, data1);//Ð´¿é
  83   2               if (status != MI_OK)
  84   2               {  
  85   3                          continue;
  86   3                   }
  87   2               while(1)
  88   2                       {
  89   3                      status = PcdRequest(PICC_REQALL, g_ucTempbuf);//Ñ°¿¨
  90   3                      if (status != MI_OK)
  91   3                      {   
  92   4                                    m++;
  93   4                                        if(m>5)
  94   4                                        {
  95   5                                           m=21;
  96   5                                           con_flag=0;
  97   5                                        }
  98   4                                      
  99   4                                InitializeSystem( );
 100   4                        PcdReset();
 101   4                        PcdAntennaOff(); 
 102   4                        PcdAntennaOn(); 
 103   4                                    continue;
 104   4                  }
 105   3                              else
 106   3                                 m=0;
 107   3                         if(con_flag==0)
 108   3                         {
 109   4                                 status = PcdAnticoll(g_ucTempbuf);//·À³å×²
 110   4                         if (status != MI_OK)
 111   4                         {    
 112   5                                              continue;  
 113   5                                 }
 114   4                                 status = PcdSelect(g_ucTempbuf);//Ñ¡¶¨¿¨Æ¬
 115   4                         if (status != MI_OK)
C51 COMPILER V9.00   MAIN                                                                  07/15/2016 17:32:16 PAGE 3   

 116   4                         {  
 117   5                                      continue;   
 118   5                                 }
 119   4                       
 120   4                         status = PcdAuthState(PICC_AUTHENT1A, 1, DefaultKey, g_ucTempbuf);//ÑéÖ¤¿¨Æ¬ÃÜÂë
 121   4                         if (status != MI_OK)
 122   4                         {  
 123   5                                      continue;    
 124   5                             }
 125   4                                      led_on();
 126   4              
 127   4      //                 status = PcdValue(PICC_DECREMENT,1,data2);//¿Û¿î
 128   4      //                 if (status != MI_OK)
 129   4      //                 {   
 130   4      //                              continue;   
 131   4      //                         }
 132   4      //                       
 133   4      //                 status = PcdBakValue(1, 2);//¿é±¸·Ý
 134   4      //                 if (status != MI_OK)
 135   4      //                 {   
 136   4      //                                  continue;    
 137   4      //                         }
 138   4                       
 139   4                         status = PcdRead(1, g_ucTempbuf);//¶Á¿é
 140   4                         if (status != MI_OK)
 141   4                         {  
 142   5                                      continue;   
 143   5                                 }
 144   4      //                 printf("¿¨¶Á¿é£º");  //³¬¼¶ÖÕ¶ËÏÔÊ¾,
 145   4      //                 for(i=0;i<7;i++)
 146   4      //                         {
 147   4      //                                      temp=g_ucTempbuf[i];
 148   4      //                                      printf("%X",temp);
 149   4      //                                                      
 150   4      //                         }
 151   4      //      
 152   4      //                         printf("\n");
 153   4                         led_blink();                                                  
 154   4                                 PcdHalt();
 155   4                                 con_flag=1;
 156   4                              }
 157   3                      }
 158   2          }
 159   1      }
*** WARNING C280 IN LINE 28 OF ..\SRC\MAIN.C: 'i': unreferenced local variable
*** WARNING C280 IN LINE 29 OF ..\SRC\MAIN.C: 'temp': unreferenced local variable
 160          
 161          
 162          ////////////////////////////////////////////////////////////////////////////////
 163          // ¹¦ÄÜÃèÊö £ºÏµÍ³³õÊ¼»¯  
 164          // ÊäÈë²ÎÊý : ÎÞ
 165          // ·µ»Ø²ÎÊý : ÎÞ
 166          // ËµÃ÷     : ¸÷ÖÖ³õÊ¼»¯
 167          ////////////////////////////////////////////////////////////////////////////////
 168          void InitializeSystem()
 169          {
 170   1      /*      P0M1 = 0x0; P0M2 = 0x0;
 171   1              P1M1 = 0x0;     P1M2 = 0x0;                      
 172   1              P3M1 = 0x0; P3M2 = 0xFF; 
 173   1      */      P0 = 0xFF; P1 = 0xFF; P3 = 0xFF;P2 = 0xFF;
 174   1      
 175   1              TMOD=0x21;                 //ÉèT0Îª·½Ê½1£¬GATE=1£»
C51 COMPILER V9.00   MAIN                                                                  07/15/2016 17:32:16 PAGE 4   

 176   1              SCON=0x50;
 177   1              TH1=0xFD;          //²¨ÌØÂÊÎª2400bps
 178   1              TL1=0xFD;
 179   1              TH0=0;
 180   1              TL0=0; 
 181   1              TR0=1;  
 182   1              ET0=1;             //ÔÊÐíT0ÖÐ¶Ï
 183   1              TR1=1;                     //¿ªÆô¶¨Ê±Æ÷
 184   1              TI=1;
 185   1              EA=1;                           //¿ªÆô×ÜÖÐ¶Ï
 186   1              
 187   1              ES = 1;
 188   1              RI = 1;
 189   1      
 190   1       
 191   1      }
 192          ////////////////////////////////////////////////////////////////////////////////
 193          // ¹¦ÄÜÃèÊö : ÑÓÊ±1ms
 194          // ÊäÈë²ÎÊý : ÎÞ
 195          // ·µ»Ø²ÎÊý : ÎÞ
 196          // ËµÃ÷     :
 197          ////////////////////////////////////////////////////////////////////////////////
 198          void delay_ms(unsigned int z)
 199          {
 200   1              unsigned int x,y;
 201   1              for(x=z;x>0;x--)
 202   1              for(y=125;y>0;y--);     
 203   1      } 
 204          ////////////////////////////////////////////////////////////////////////////////
 205          // ¹¦ÄÜÃèÊö : LEDÃð 
 206          // ÊäÈë²ÎÊý : ÎÞ
 207          // ·µ»Ø²ÎÊý : ÎÞ
 208          // ËµÃ÷     :
 209          ////////////////////////////////////////////////////////////////////////////////
 210          void led_on()
 211          {
 212   1              LED4=0;
 213   1              LED6=0;
 214   1              LED5=0 ;
 215   1      }
 216          ////////////////////////////////////////////////////////////////////////////////
 217          // ¹¦ÄÜÃèÊö : LEDÁÁ 
 218          // ÊäÈë²ÎÊý : ÎÞ
 219          // ·µ»Ø²ÎÊý : ÎÞ
 220          // ËµÃ÷     :
 221          ////////////////////////////////////////////////////////////////////////////////
 222          void led_off()
 223          {
 224   1              LED4=1;
 225   1              LED6=1;
 226   1              LED5=1 ;
 227   1      }
 228          ////////////////////////////////////////////////////////////////////////////////
 229          // ¹¦ÄÜÃèÊö : LEDÉÁË¸ 
 230          // ÊäÈë²ÎÊý : ÎÞ
 231          // ·µ»Ø²ÎÊý : ÎÞ
 232          // ËµÃ÷     :
 233          ////////////////////////////////////////////////////////////////////////////////
 234          void led_blink()
 235          {
 236   1              led_on();
 237   1              delay_ms(300);
C51 COMPILER V9.00   MAIN                                                                  07/15/2016 17:32:16 PAGE 5   

 238   1              led_off();
 239   1              delay_ms(350);
 240   1              led_on();
 241   1              delay_ms(300);
 242   1              led_off();
 243   1              delay_ms(250);
 244   1              led_on();
 245   1              delay_ms(300);
 246   1              led_off();
 247   1              delay_ms(250);
 248   1      }
 249          
 250          
 251             
 252            
 253          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    394    ----
   CONSTANT SIZE    =     17    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     21       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
