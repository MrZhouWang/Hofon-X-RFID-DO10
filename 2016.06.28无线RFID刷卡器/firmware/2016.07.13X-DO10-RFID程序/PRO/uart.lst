C51 COMPILER V9.00   UART                                                                  07/15/2016 17:46:17 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN ..\OUT\uart.obj
COMPILER INVOKED BY: C:\C51\BIN\C51.EXE ..\SRC\uart.c LARGE BROWSE INCDIR(..\INC;..\PRO;..\SRC) DEBUG OBJECTEXTEND PRINT
                    -(.\uart.lst) OBJECT(..\OUT\uart.obj)

line level    source

   1          #include "include.h"
   2          
   3          volatile OS_UART xdata uart;
   4          volatile OS_UART xdata uart232;
   5          volatile UINT8 InTemp;
   6          bit busy;
   7          
   8          #define RCV_OVER_TIMER          2
   9          #define RCV_OVER_TIMER232               2
  10          extern void Serial232PutChar(UINT8 dat);
  11          extern void Send485SerialByte(UINT8 *Ram, UINT16 len);
  12          
  13          
  14          /***************************************************
  15                          UART1初始化
  16                                                                                                  7     6     5     4     3     2     1     0     Reset Value
  17          sfr SCON = 0x98; //Serial Control         SM0/FE SM1   SM2   REN   TB8   RB8    TI    RI    0000,0000
  18          SM0 SM1:
  19           0   0         同步移位寄存器           fosc/12
  20           0   1             10位异步收发         由定时器控制
  21           1   0         11位异步收发             fosc/32或fosc/64
  22           1   1         11位异步收发         由定时器控制
  23          P = PSW.0      P=1奇   P=0偶
  24          ***************************************************/
  25          void InitT485(void)
  26          {
  27   1      //    SCON  = 0x50;  //配置串口为模式1
  28   1      //    TMOD &= 0x0F;  //清零T1的控制位
  29   1      //    TMOD |= 0x20;  //配置T1为模式2
  30   1      //    TH1 = 256 - (11059200/12/32)/9600;  //计算T1重载值
  31   1      //    TL1 = TH1;     //初值等于重载值
  32   1      //    ET1 = 0;       //禁止T1中断
  33   1      //    ES  = 1;       //使能串口中断
  34   1      //    TR1 = 1;       //启动T1
  35   1      //      
  36   1      
  37   1      
  38   1      
  39   1                      PCON &= 0x7F;           //波特率不倍速
  40   1              SCON = 0x50;            //8位数据,可变波特率
  41   1              AUXR |= 0x40;           //定时器1时钟为Fosc,即1T
  42   1              AUXR &= 0xFE;           //串口1选择定时器1为波特率发生器
  43   1              TMOD &= 0x0F;           //清除定时器1模式位
  44   1              TMOD |= 0x20;           //设定定时器1为8位自动重装方式
  45   1              TL1 = 0xDC;             //设定定时初值
  46   1              TH1 = 0xDC;             //设定定时器重装值
  47   1              ET1 = 0;                //禁止定时器1中断
  48   1              TR1 = 1;                //启动定时器1
  49   1                 EA=1;
  50   1      //      TMOD = (TMOD & 0x0f) | 0x20;    //8位自动重载定时器
  51   1      //      SCON = 0xd0;                            //串行口工作模式3选择
  52   1      //      IP   = 0x10;                                //PS set the high
  53   1      //      PCON  &= 0x7f;                  //SOMD =0
  54   1      //
C51 COMPILER V9.00   UART                                                                  07/15/2016 17:46:17 PAGE 2   

  55   1      //      //波特率 38400
  56   1      //      AUXR |= 0x40;                           //定时器1时钟为Fosc,即1T
  57   1      //      AUXR &= 0xfe;                           //串口1选择定时器1为波特率发生器
  58   1      //      TL1 = 0xF7;                             //设定定时初值
  59   1      //      TH1 = 0xF7;                             //设定定时器重装值
  60   1      //
  61   1      //
  62   1      //      ET1  = 0;                       //close timer1 interrupt
  63   1      //      TR1  = 1;                           //open timer1
  64   1      //      ES   = 1;                                       //Enabled serial port interrrup 
  65   1      //      EA=1;
  66   1      
  67   1      }
  68          /*******************************************************************************
  69                                                                  串口1初始化
  70                  input :     none
  71                  default:
  72                      data bits:  8
  73                      start bits: 1
  74                      stop bits:  1
  75                      parity:     NONE                                    
  76          *******************************************************************************/
  77          void UART485_Init(void)
  78          {
  79   1              InitT485();
  80   1              uart.rIndex = 0;
  81   1              uart.rFlag  = 0;
  82   1              uart.rTimer = 0;        
  83   1      }
  84          
  85          /*******************************************************************************
  86                                                           串口1中断函数
  87          *******************************************************************************/
  88          void SCON485_int (void) interrupt 4
  89          {
  90   1              if (RI)
  91   1          {
  92   2                      RI = 0;
  93   2               
  94   2                      if ( uart.rIndex >= UART_BUF_LEN ) return;
  95   2                      if(uart.rFlag == ON)
  96   2                              return;
  97   2                      //      SBUF=SBUF;
  98   2                      uart.rBuffer[uart.rIndex++] = SBUF;     
  99   2                      uart.rTimer = RCV_OVER_TIMER;
 100   2              }
 101   1      }
 102          /***********************************************
 103                  串口发送程序
 104          input :     *Ram    
 105                      len     
 106          output :    NONE
 107          ***********************************************/
 108          void Send485SerialByte(UINT8 *Ram, UINT16 len)
 109          {
 110   1              LED_TXD485_ON;
 111   1              M485_CTRL_ON;
 112   1              for(;len>0;len--)
 113   1              {
 114   2                      //ACC = *Ram;
 115   2      //              if(P == 0)
 116   2      //              {
C51 COMPILER V9.00   UART                                                                  07/15/2016 17:46:17 PAGE 3   

 117   2      //                      TB8 = 0;
 118   2      //              }
 119   2      //              else
 120   2      //              {
 121   2      //                      TB8 =1;
 122   2      //              }
 123   2      
 124   2                      SBUF = *Ram;           
 125   2                      while(!TI){;}             
 126   2                      TI = 0;
 127   2                      Ram++;
 128   2              }
 129   1              M485_CTRL_OFF;
 130   1              LED_TXD485_OFF;
 131   1      
 132   1      }
 133          ///////////////////////////////////////////////--UART232--配置--////////////////////////////////
 134          
 135          /***************************************************
 136                          UART2初始化
 137          ***************************************************/
 138          void InitT232(void)
 139          {
 140   1              //扫描枪串口配置:8BIT数据位、无奇偶校验、1位停止位
 141   1              #if (PARITYBIT232 == NONE_PARITY)
 142   1              S2CON = 0x5A;               //8位可变波特率 (无校验位)
 143   1              #elif (PARITYBIT232 == ODD_PARITY) || (PARITYBIT == EVEN_PARITY) || (PARITYBIT == MARK_PARITY)
                      S2CON = 0xda;               //9位可变波特率,校验位初始为1
                      #elif (PARITYBIT232 == SPACE_PARITY)
                      S2CON = 0xd5;               //9位可变波特率,校验位初始为0
                      #endif
 148   1          
 149   1              switch (baudrate)
 150   1              {
 151   2                      case BD_4800:
 152   2                              BRT = -(FOSC/32/BD232_4800);      //设置独立波特率发生器的重载初值
 153   2                              break;
 154   2                      case BD_9600:
 155   2                              BRT = -(FOSC/32/BD232_9600);      //设置独立波特率发生器的重载初值
 156   2                              break;
 157   2                      case BD_19200:
 158   2                              BRT = -(FOSC/32/BD232_19200);      //设置独立波特率发生器的重载初值
 159   2                              PCON |= 0x80;
 160   2                              break;
 161   2                      case BD_38400:
 162   2                              BRT = -(FOSC/32/BD232_38400);      //设置独立波特率发生器的重载初值
 163   2                              break;
 164   2                      default:
 165   2                              BRT = -(FOSC/32/BD232_9600);      //设置独立波特率发生器的重载初值
 166   2                              break;
 167   2              }
 168   1              AUXR = 0x14;                //独立波特率发生器工作在1T模式
 169   1              IE2 = 0x01;                 //使能串口2中断     
 170   1          return;
 171   1      }
 172          /*******************************************************************************
 173                                                                  串口初始化
 174                  input :     none
 175                  default:
 176                      data bits:  8
 177                      start bits: 1
 178                      stop bits:  1
C51 COMPILER V9.00   UART                                                                  07/15/2016 17:46:17 PAGE 4   

 179                      parity:     NONE                                    
 180          *******************************************************************************/
 181          void UART232_Init(void)
 182          {
 183   1              InitT232();
 184   1              uart232.rIndex = 0;
 185   1              uart232.rFlag  = 0;
 186   1              uart232.rTimer = 0;     
 187   1      }
 188          
 189          /*******************************************************************************
 190                                                           扫描枪串口中断函数
 191                                          
 192          *******************************************************************************/
 193          void SCON232_int (void) interrupt 8
 194          {    
 195   1              if(uart232.rFlag == ON)
 196   1              {
 197   2                      uart232.rFlag   = OFF;
 198   2                      uart232.rIndex  = 0;
 199   2                      InTemp = 0;
 200   2              }
 201   1              // 接收中断
 202   1              if(S2CON & S2RI) 
 203   1              {
 204   2                      S2CON &= ~S2RI;         //清除接收完成标志                 
 205   2                      if ( uart232.rIndex >= UART232_BUF_LEN )
 206   2                              return;
 207   2                      uart232.rBuffer[uart232.rIndex++] = S2BUF;      
 208   2                      uart232.rTimer = RCV_OVER_TIMER232;        
 209   2              }
 210   1          //发送完成中断
 211   1              if (S2CON & S2TI)
 212   1              {
 213   2                      S2CON &= ~S2TI;         //清除发送完成标志
 214   2                      busy = 0;
 215   2              }
 216   1      }
 217          
 218          /*******************************************************************************
 219                                                                          END                                     
 220          *******************************************************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    321    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    211    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
