C51 COMPILER V9.00   MAIN                                                                  07/15/2016 17:46:17 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\OUT\main.obj
COMPILER INVOKED BY: C:\C51\BIN\C51.EXE ..\SRC\main.c LARGE BROWSE INCDIR(..\INC;..\PRO;..\SRC) DEBUG OBJECTEXTEND PRINT
                    -(.\main.lst) OBJECT(..\OUT\main.obj)

line level    source

   1          /*=========================================================
   2          // ³ÌÐò¸ü¸ÄËµÃ÷
   3          
   4          =========================================================*/
   5          
   6          #define  MAIN_GLOBAL
   7          #include "include.h"
   8          unsigned short timerc;
   9          volatile OS_SYS sys;
  10          
  11          ///////////////////////////////È«¾Ö±äÁ¿/////////////////////////////////////
  12          
  13          unsigned char code data1[16] ={0x12,0x34,0x56,0x78,0xED,0xCB,0xA9,0x87,0x12,0x34,0x56,0x78,0x01,0xFE,0x01,
             -0xFE};
  14          //M1¿¨µÄÄ³Ò»¿éÐ´ÎªÈçÏÂ¸ñÊ½£¬Ôò¸Ã¿éÎªÇ®°ü£¬¿É½ÓÊÕ¿Û¿îºÍ³äÖµÃüÁî
  15          //4×Ö½Ú½ð¶î£¨µÍ×Ö½ÚÔÚÇ°£©£«4×Ö½Ú½ð¶îÈ¡·´£«4×Ö½Ú½ð¶î£«1×Ö½Ú¿éµØÖ·£«1×Ö½Ú¿éµØÖ·È¡·´£«1×Ö½Ú¿éµØÖ·£«1×Ö½Ú¿éµØÖ
             -·È¡·´ 
  16          unsigned char code DefaultKey[6] = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}; 
  17          
  18          //unsigned char g_ucTempbuf[20];
  19          void led_blink();
  20          void delay_ms(unsigned int z);
  21          void led_off();
  22          void led_on();  
  23          
  24          
  25          
  26          
  27          
  28          
  29          volatile UINT8   digital_led_loading = OFF;
  30          volatile UINT8   digital_led_refresh = OFF;
  31          volatile UINT16  digital_led_loading_static = 0;
  32          volatile UINT8   led_static_warn = OFF;//µ±±¾±êÇ©°´ÏÂ°´Å¥ºóµÄÐÅÏ¢10ÃëÖÓºó£¬
  33                                                                          //ÆäÊý¾Ý¶¼»¹Ã»±»²É¼¯ÉÏÈ¥£¬ÔòÀ¶É«ÉÁË¸£©£»
  34          //volatile UINT16   led_static_warn_cnt = 0;
  35          //volatile UINT8 led_flash_switch =OFF;
  36          
  37          volatile UINT8 led_flash_NO =LED_RED;                                   //µÆ×é¿ØÖÆ
  38          volatile UINT16 led_flash_period=1000;                                  //ÉÁË¸ÖÜÆÚ¿ØÖÆ
  39          volatile UINT8 led_flash_mode =LED_FLASH_MODE_1V1;              //ÁÁÃðÊ±¼ä±ÈÀý¿ØÖÆ:0³£ÁÁ
  40          volatile UINT8 led_flash_status = 0;                                    //ÉÁË¸¿ØÖÆµÆÊ±£¬µÆµ±Ç°µÄ×´Ì¬,0¡ª¡ªÃð£»1¡ª¡ªÁÁ
  41          volatile UINT8 led_flash_NO_BK =LED_RED;                                //µÆ×é¿ØÖÆ±¸·ÝÊý¾Ý(À­½ø¶ÈÌõºóÊ¹ÓÃ)
  42          
  43          //Î´Íê³ÉÈÎÎñ¿é
  44          volatile UINT8 beSettingAddr = 0;                                               //0:·ÇÉèÖÃÕ¾Ö·          1:ÉèÖÃÕ¾Ö·              2£ºÕ¾Ö·Éè¶¨ÒÑ¾­°´ÏÂOK¼ü
  45          volatile UINT8 toSettedAddr[3];                                                 //´ýÉè¶¨µØÖ·Öµ
  46          volatile UINT8 task_unupdate_num = 0;                           //Ö÷»úÎ´ÏÂ´«×÷ÒµÈÎÎñ×ÜÊý
  47          volatile UINT8 task_unfinish_num =0;                                    //Î´Íê³ÉÈÎÎñ×ÜÊý= 0,1...MAX_TASK_NUM
  48          volatile UINT8 task_unfinish_NO[MAX_TASK_NUM] ={0};             //»õÎ»ºÅ
  49          volatile UINT8 task_un_goods_numH[MAX_TASK_NUM] ={0};   //ÉÌÆ·Êý¾Ý¸ßÎ»
  50          volatile UINT8 task_un_goods_numL[MAX_TASK_NUM] ={0};   //ÉÌÆ·Êý¾ÝµÍÎ»
  51          
  52          ///ÒÑÍê³ÉÈÎÎñ¿é
C51 COMPILER V9.00   MAIN                                                                  07/15/2016 17:46:17 PAGE 2   

  53          volatile UINT8 task_finished_num =0;                                    //ÒÑÍê³ÉÈÎÎñ×ÜÊý= 0,1...MAX_TASK_NUM
  54          volatile UINT8 task_finished_NO[MAX_TASK_NUM] ={0};             //»õÎ»ºÅ
  55          volatile UINT8 task_ed_goods_numH[MAX_TASK_NUM] ={0};   //ÉÌÆ·Êý¾Ý¸ßÎ»
  56          volatile UINT8 task_ed_goods_numL[MAX_TASK_NUM] ={0};   //ÉÌÆ·Êý¾ÝµÍÎ»
  57          
  58          volatile UINT8 SystemLocked = OFF;                                              //Ëø¶¨ÏµÍ³¡¢½âËøÏµÍ³
  59          
  60          volatile DisplayInfo DispInfoCur;                                               //µ±Ç°ÏÔÊ¾ÐÅÏ¢           
  61          ///////////////////////////////È«¾Ö±äÁ¿-END-////////////////////////////////
  62           
  63          ////////////////////////////////////////////////////////////////////////////////
  64          // ¹¦ÄÜÃèÊö : main program
  65          // ÊäÈë²ÎÊý : 
  66          // ·µ»Ø²ÎÊý : 
  67          // ËµÃ÷     :  
  68          ////////////////////////////////////////////////////////////////////////////////
  69          int main(void) 
  70          {   
  71   1      //      DelayMs(200);    //µÈ´ýµçÔ´ÎÈ¶¨        
  72   1      //
  73   1      //      EA = 0;
  74   1      //      digital_led_cntrl_Init();
  75   1      //      IO_Init();
  76   1      //      InitT0();
  77   1      //
  78   1      //      LoadParaInEeprom();
  79   1      //      baudrate   = BD_9600;
  80   1      //      UART232_Init();
  81   1      //      UART485_Init(); //¹Ì¶¨Ê¹ÓÃ38400²¨ÌØÂÊ
  82   1      //
  83   1      //
  84   1      //                 
  85   1      //      Start_Init();
  86   1      //      M485_CTRL_OFF;
  87   1      //      EA = 1;//Ê¹ÄÜÖÐ¶Ï                                       
  88   1      //      while(1)
  89   1      //      {       
  90   1      //              P0M1 = 0x00;      //µÆËþÇ¿ÍÆÍìÊä³ö
  91   1      //              P0M0 = 0x0f;
  92   1      //
  93   1      //              P1M1 = 0x00;
  94   1      //              P1M0 = 0x83;
  95   1      //              
  96   1      //              //µØÖ·Éè¶¨Ê±ÏÔÊ¾µØÖ·£¬²¢ÁÁµÆ
  97   1      //              if(beSettingAddr == 1 ||  beSettingAddr == 2)
  98   1      //              {
  99   1      //                      if(digital_led_refresh == ON)
 100   1      //                      {
 101   1      //                              digital_led_refresh = OFF;
 102   1      //                              digital_led_dispaddr();
 103   1      //                      }
 104   1      //              }
 105   1      //              //1¸öÐÅºÅµÆÓë3×éledÖ¸Ê¾µÆÉÁË¸¿ØÖÆ
 106   1      //              CMD_led_flash();
 107   1      //              //µÆËþµçÔ´¿ØÖÆ
 108   1      //              CMD_LigheTower_flash();
 109   1      //              //Ë¢ÐÂÒ»´ÎÊýÂë¹ÜÊýÖµ£¨°üÀ¨ÏÔÊ¾µ±Ç°×÷ÒµµÄÒÔ¼°Êý¾Ý»ØÏÔ£©
 110   1      //              if( digital_led_refresh == ON) 
 111   1      //              {
 112   1      //                      digital_led_refresh = OFF;
 113   1      //                      digital_led_disp();
 114   1      //              }
C51 COMPILER V9.00   MAIN                                                                  07/15/2016 17:46:17 PAGE 3   

 115   1      //              //°´¼ü´¦Àí(ÓÐ°´¼üÊ±)
 116   1      //              Scan_Keyboard();
 117   1      //              if (keyStatus != CMD_KEY_NULL) 
 118   1      //              {
 119   1      //                      Process_Keyboard();
 120   1      //              }
 121   1      //              //´¦Àí485Í¨Ñ¶
 122   1      //              if (uart.rFlag == ON)
 123   1      //              {
 124   1      //                      Send485SerialByte((UINT8 *)uart.rBuffer, uart.rIndex);  //´®¿Ú´òÓ¡½ÓÊÕµ½µÄÊý¾Ý
 125   1      //                      Cmd_Process();
 126   1      //                      uart.rFlag   = OFF;
 127   1      //                      uart.rIndex  = 0;
 128   1      //              }
 129   1      //      }             
 130   1      
 131   1           unsigned char status,i;
 132   1               unsigned int temp;
 133   1           InitializeSystem( );
 134   1           PcdReset();
 135   1           PcdAntennaOff(); 
 136   1           PcdAntennaOn(); 
 137   1           while ( 1 )
 138   1           {   
 139   2              status = PcdRequest(PICC_REQALL, g_ucTempbuf);//Ñ°¿¨
 140   2               if (status != MI_OK)
 141   2               {    
 142   3                    InitializeSystem( );
 143   3                    PcdReset();
 144   3                    PcdAntennaOff(); 
 145   3                    PcdAntennaOn(); 
 146   3                                led_on();
 147   3                                continue;
 148   3               }           
 149   2      //               printf("¿¨µÄÀàÐÍ:");
 150   2      //         for(i=0;i<2;i++)
 151   2      //               {
 152   2      //                   temp=g_ucTempbuf[i];
 153   2      //                   printf("%X",temp); 
 154   2      //               }
 155   2                              
 156   2               status = PcdAnticoll(g_ucTempbuf);//·À³å×²
 157   2               if (status != MI_OK)
 158   2               { 
 159   3                           continue;    
 160   3                   }        
 161   2                                      
 162   2      //               printf("¿¨ÐòÁÐºÅ£º");  //³¬¼¶ÖÕ¶ËÏÔÊ¾,
 163   2      //               for(i=0;i<4;i++)
 164   2      //               {
 165   2      //                       temp=g_ucTempbuf[i];
 166   2      //                       printf("%X",temp);                     
 167   2      //               }
 168   2      
 169   2               status = PcdSelect(g_ucTempbuf);//Ñ¡¶¨¿¨Æ¬
 170   2               if (status != MI_OK)
 171   2               { 
 172   3                           continue;    
 173   3                       }
 174   2               status = PcdAuthState(PICC_AUTHENT1A, 1, DefaultKey, g_ucTempbuf);//ÑéÖ¤¿¨Æ¬ÃÜÂë
 175   2               if (status != MI_OK)
 176   2               {   
C51 COMPILER V9.00   MAIN                                                                  07/15/2016 17:46:17 PAGE 4   

 177   3                               continue;    
 178   3                       }
 179   2               
 180   2               status = PcdWrite(1, data1);//Ð´¿é
 181   2               if (status != MI_OK)
 182   2               {  
 183   3                          continue;
 184   3                   }
 185   2      
 186   2                       while(1)
 187   2                       {
 188   3                              M1_Read(PICC_AUTHENT1A ,3,16,DefaultKey);
 189   3                       }
 190   2              }
 191   1      }
*** WARNING C280 IN LINE 131 OF ..\SRC\MAIN.C: 'i': unreferenced local variable
*** WARNING C280 IN LINE 132 OF ..\SRC\MAIN.C: 'temp': unreferenced local variable
 192          
 193          ////////////////////////////////////////////////////////////////////////////////
 194          // ¹¦ÄÜÃèÊö £ºÏµÍ³³õÊ¼»¯  
 195          // ÊäÈë²ÎÊý : ÎÞ
 196          // ·µ»Ø²ÎÊý : ÎÞ
 197          // ËµÃ÷     : ¸÷ÖÖ³õÊ¼»¯
 198          ////////////////////////////////////////////////////////////////////////////////
 199          void InitializeSystem()
 200          {
 201   1      /*      P0M1 = 0x0; P0M2 = 0x0;
 202   1              P1M1 = 0x0;     P1M2 = 0x0;                      
 203   1              P3M1 = 0x0; P3M2 = 0xFF; 
 204   1      */      P0 = 0xFF; P1 = 0xFF; P3 = 0xFF;P2 = 0xFF;
 205   1      
 206   1              TMOD=0x21;                 //ÉèT0Îª·½Ê½1£¬GATE=1£»
 207   1              SCON=0x50;
 208   1              TH1=0xFD;          //²¨ÌØÂÊÎª2400bps
 209   1              TL1=0xFD;
 210   1              TH0=0;
 211   1              TL0=0; 
 212   1              TR0=1;  
 213   1              ET0=1;             //ÔÊÐíT0ÖÐ¶Ï
 214   1              TR1=1;                     //¿ªÆô¶¨Ê±Æ÷
 215   1              TI=1;
 216   1              EA=1;                           //¿ªÆô×ÜÖÐ¶Ï
 217   1              
 218   1              ES = 1;
 219   1              RI = 1;
 220   1      
 221   1       
 222   1      }
 223          //////////////////////////////////////////////////////////////////////////////////
 224          //// ¹¦ÄÜÃèÊö : ¶¨Ê±Æ÷ÖÐ¶ÏÈë¿Ú
 225          //// ÊäÈë²ÎÊý : 
 226          //// ·µ»Ø²ÎÊý : 
 227          //// ËµÃ÷     :  
 228          //////////////////////////////////////////////////////////////////////////////////
 229          //void timer0_int (void) interrupt 1
 230          //{ 
 231          //    rc_cont++;
 232          //      if(rc_cont>RC_CON)
 233          //      {
 234          //          M1_Read(PICC_AUTHENT1A ,3,16,DefaultKey);   
 235          //      }
 236          //      int index = 0;
C51 COMPILER V9.00   MAIN                                                                  07/15/2016 17:46:17 PAGE 5   

 237          //
 238          //    TH0  = TH0_INIT;
 239          //    TL0  = TL0_INIT;
 240          //        
 241          //    sys.led_scan_flag  = ON;
 242          //    //´®¿Ú1-485»º³åÇøÓÐÊý¾Ý
 243          //    if (uart.rIndex != 0)                             
 244          //    {
 245          //        if (uart.rTimer-- == 0) 
 246          //        {
 247          //                      uart.rFlag  = ON;
 248          //              }
 249          //    }
 250          //
 251          //    //´®¿Ú2-232»º³åÇøÓÐÊý¾Ý
 252          //    if (uart232.rIndex != 0)                          
 253          //    {
 254          //              if (uart232.rTimer-- == 0) 
 255          //              {
 256          //                      uart232.rFlag  = ON;
 257          //                      digital_led_refresh = ON;
 258          //              }
 259          //    }    
 260          //    //µÝ¼õ¼ÆËãÆ÷£¬×Ô¼õ1
 261          //    if (sys.led_flash_count != 0)
 262          //        sys.led_flash_count--;
 263          //      for(index = 0; index < 6; index++)
 264          //      {
 265          //              if(LightTowerCtl[index].led_flash_count > 0)
 266          //                      LightTowerCtl[index].led_flash_count--;
 267          //      }
 268          //    //°¤¸öÉ¨ÃèÊýÂë¹Ü
 269          //    led_Scan();
 270          //      timerc++;
 271          //      if(timerc>1000)
 272          //      {
 273          //         p_led_red =1;
 274          //        
 275          //      }
 276          //      else
 277          //         p_led_red =0;
 278          //      if(timerc>2000)
 279          //         timerc=0;
 280          //}
 281          /*******************************************************************************
 282                                                                          END                                     
 283          *******************************************************************************/
 284          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    200    ----
   CONSTANT SIZE    =     22    ----
   XDATA SIZE       =     78       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
