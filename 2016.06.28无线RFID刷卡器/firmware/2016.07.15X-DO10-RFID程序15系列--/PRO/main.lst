C51 COMPILER V9.00   MAIN                                                                  07/18/2016 14:16:50 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\OUT\main.obj
COMPILER INVOKED BY: C:\C51\BIN\C51.EXE ..\SRC\main.c LARGE BROWSE INCDIR(..\INC;..\PRO;..\SRC) DEBUG OBJECTEXTEND PRINT
                    -(.\main.lst) OBJECT(..\OUT\main.obj)

line level    source

   1          /*=========================================================
   2          // ³ÌÐò¸ü¸ÄËµÃ÷
   3          
   4          =========================================================*/
   5          
   6          #define  MAIN_GLOBAL
   7          #include "include.h"
   8          volatile unsigned short timerc;
   9          volatile OS_SYS sys;
  10          
  11          ///////////////////////////////È«¾Ö±äÁ¿/////////////////////////////////////
  12          
  13          unsigned char code rc_data[16] ={0x12,0x34,0x56,0x78,0xED,0xCB,0xA9,0x87,0x12,0x34,0x56,0x78,0x01,0xFE,0x0
             -1,0xFE};
  14          //M1¿¨µÄÄ³Ò»¿éÐ´ÎªÈçÏÂ¸ñÊ½£¬Ôò¸Ã¿éÎªÇ®°ü£¬¿É½ÓÊÕ¿Û¿îºÍ³äÖµÃüÁî
  15          //4×Ö½Ú½ð¶î£¨µÍ×Ö½ÚÔÚÇ°£©£«4×Ö½Ú½ð¶îÈ¡·´£«4×Ö½Ú½ð¶î£«1×Ö½Ú¿éµØÖ·£«1×Ö½Ú¿éµØÖ·È¡·´£«1×Ö½Ú¿éµØÖ·£«1×Ö½Ú¿éµØÖ
             -·È¡·´ 
  16          unsigned char code DefaultKey[6] = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF}; 
  17          
  18          //unsigned char g_ucTempbuf[20];
  19          void led_blink();
  20          void delay_ms(unsigned int z);
  21          void led_off();
  22          void led_on();  
  23          
  24          
  25          
  26          
  27          
  28          
  29          volatile UINT8   digital_led_loading = OFF;
  30          volatile UINT8   digital_led_refresh = OFF;
  31          volatile UINT16  digital_led_loading_static = 0;
  32          volatile UINT8   led_static_warn = OFF;//µ±±¾±êÇ©°´ÏÂ°´Å¥ºóµÄÐÅÏ¢10ÃëÖÓºó£¬
  33                                                                          //ÆäÊý¾Ý¶¼»¹Ã»±»²É¼¯ÉÏÈ¥£¬ÔòÀ¶É«ÉÁË¸£©£»
  34          //volatile UINT16   led_static_warn_cnt = 0;
  35          //volatile UINT8 led_flash_switch =OFF;
  36          
  37          volatile UINT8 led_flash_NO =LED_RED;                                   //µÆ×é¿ØÖÆ
  38          volatile UINT16 led_flash_period=1000;                                  //ÉÁË¸ÖÜÆÚ¿ØÖÆ
  39          volatile UINT8 led_flash_mode =LED_FLASH_MODE_1V1;              //ÁÁÃðÊ±¼ä±ÈÀý¿ØÖÆ:0³£ÁÁ
  40          volatile UINT8 led_flash_status = 0;                                    //ÉÁË¸¿ØÖÆµÆÊ±£¬µÆµ±Ç°µÄ×´Ì¬,0¡ª¡ªÃð£»1¡ª¡ªÁÁ
  41          volatile UINT8 led_flash_NO_BK =LED_RED;                                //µÆ×é¿ØÖÆ±¸·ÝÊý¾Ý(À­½ø¶ÈÌõºóÊ¹ÓÃ)
  42          
  43          //Î´Íê³ÉÈÎÎñ¿é
  44          volatile UINT8 beSettingAddr = 0;                                               //0:·ÇÉèÖÃÕ¾Ö·          1:ÉèÖÃÕ¾Ö·              2£ºÕ¾Ö·Éè¶¨ÒÑ¾­°´ÏÂOK¼ü
  45          volatile UINT8 toSettedAddr[3];                                                 //´ýÉè¶¨µØÖ·Öµ
  46          volatile UINT8 task_unupdate_num = 0;                           //Ö÷»úÎ´ÏÂ´«×÷ÒµÈÎÎñ×ÜÊý
  47          volatile UINT8 task_unfinish_num =0;                                    //Î´Íê³ÉÈÎÎñ×ÜÊý= 0,1...MAX_TASK_NUM
  48          volatile UINT8 task_unfinish_NO[MAX_TASK_NUM] ={0};             //»õÎ»ºÅ
  49          volatile UINT8 task_un_goods_numH[MAX_TASK_NUM] ={0};   //ÉÌÆ·Êý¾Ý¸ßÎ»
  50          volatile UINT8 task_un_goods_numL[MAX_TASK_NUM] ={0};   //ÉÌÆ·Êý¾ÝµÍÎ»
  51          
  52          ///ÒÑÍê³ÉÈÎÎñ¿é
C51 COMPILER V9.00   MAIN                                                                  07/18/2016 14:16:50 PAGE 2   

  53          volatile UINT8 task_finished_num =0;                                    //ÒÑÍê³ÉÈÎÎñ×ÜÊý= 0,1...MAX_TASK_NUM
  54          volatile UINT8 task_finished_NO[MAX_TASK_NUM] ={0};             //»õÎ»ºÅ
  55          volatile UINT8 task_ed_goods_numH[MAX_TASK_NUM] ={0};   //ÉÌÆ·Êý¾Ý¸ßÎ»
  56          volatile UINT8 task_ed_goods_numL[MAX_TASK_NUM] ={0};   //ÉÌÆ·Êý¾ÝµÍÎ»
  57          
  58          volatile UINT8 SystemLocked = OFF;                                              //Ëø¶¨ÏµÍ³¡¢½âËøÏµÍ³
  59          
  60          volatile DisplayInfo DispInfoCur;                                               //µ±Ç°ÏÔÊ¾ÐÅÏ¢           
  61          ///////////////////////////////È«¾Ö±äÁ¿-END-////////////////////////////////
  62           
  63          ////////////////////////////////////////////////////////////////////////////////
  64          // ¹¦ÄÜÃèÊö : main program
  65          // ÊäÈë²ÎÊý : 
  66          // ·µ»Ø²ÎÊý : 
  67          // ËµÃ÷     :  
  68          ////////////////////////////////////////////////////////////////////////////////
  69          int main(void) 
  70          {   
  71   1      //      DelayMs(200);    //µÈ´ýµçÔ´ÎÈ¶¨        
  72   1      //
  73   1      //      EA = 0;
  74   1      //      digital_led_cntrl_Init();
  75   1      //      IO_Init();
  76   1      //      InitT0();
  77   1      //
  78   1      //      LoadParaInEeprom();
  79   1      //      baudrate   = BD_9600;
  80   1      //      UART232_Init();
  81   1      //      UART485_Init(); //¹Ì¶¨Ê¹ÓÃ38400²¨ÌØÂÊ
  82   1      //
  83   1      //
  84   1      //                 
  85   1      //      Start_Init();
  86   1      //      M485_CTRL_OFF;
  87   1      //      EA = 1;//Ê¹ÄÜÖÐ¶Ï                                       
  88   1      //      while(1)
  89   1      //      {       
  90   1      //              P0M1 = 0x00;      //µÆËþÇ¿ÍÆÍìÊä³ö
  91   1      //              P0M0 = 0x0f;
  92   1      //
  93   1      //              P1M1 = 0x00;
  94   1      //              P1M0 = 0x83;
  95   1      //              
  96   1      //              //µØÖ·Éè¶¨Ê±ÏÔÊ¾µØÖ·£¬²¢ÁÁµÆ
  97   1      //              if(beSettingAddr == 1 ||  beSettingAddr == 2)
  98   1      //              {
  99   1      //                      if(digital_led_refresh == ON)
 100   1      //                      {
 101   1      //                              digital_led_refresh = OFF;
 102   1      //                              digital_led_dispaddr();
 103   1      //                      }
 104   1      //              }
 105   1      //              //1¸öÐÅºÅµÆÓë3×éledÖ¸Ê¾µÆÉÁË¸¿ØÖÆ
 106   1      //              CMD_led_flash();
 107   1      //              //µÆËþµçÔ´¿ØÖÆ
 108   1      //              CMD_LigheTower_flash();
 109   1      //              //Ë¢ÐÂÒ»´ÎÊýÂë¹ÜÊýÖµ£¨°üÀ¨ÏÔÊ¾µ±Ç°×÷ÒµµÄÒÔ¼°Êý¾Ý»ØÏÔ£©
 110   1      //              if( digital_led_refresh == ON) 
 111   1      //              {
 112   1      //                      digital_led_refresh = OFF;
 113   1      //                      digital_led_disp();
 114   1      //              }
C51 COMPILER V9.00   MAIN                                                                  07/18/2016 14:16:50 PAGE 3   

 115   1      //              //°´¼ü´¦Àí(ÓÐ°´¼üÊ±)
 116   1      //              Scan_Keyboard();
 117   1      //              if (keyStatus != CMD_KEY_NULL) 
 118   1      //              {
 119   1      //                      Process_Keyboard();
 120   1      //              }
 121   1      //              //´¦Àí485Í¨Ñ¶
 122   1      //              if (uart.rFlag == ON)
 123   1      //              {
 124   1      //                      Send485SerialByte((UINT8 *)uart.rBuffer, uart.rIndex);  //´®¿Ú´òÓ¡½ÓÊÕµ½µÄÊý¾Ý
 125   1      //                      Cmd_Process();
 126   1      //                      uart.rFlag   = OFF;
 127   1      //                      uart.rIndex  = 0;
 128   1      //              }
 129   1      //      }             
 130   1      
 131   1               UART485_Init();        //¹Ì¶¨Ê¹ÓÃ38400²¨ÌØÂÊ
 132   1               InitT0();       //³õÊ¼»¯¶¨Ê±Æ÷1 
 133   1           PcdReset();
 134   1           PcdAntennaOff(); 
 135   1           PcdAntennaOn(); 
 136   1           while ( 1 )
 137   1           {   
 138   2               M1_Read(PICC_AUTHENT1A ,3,16,DefaultKey);
 139   2      //        status = PcdRequest(PICC_REQALL, g_ucTempbuf);//Ñ°¿¨
 140   2      //         if (status != MI_OK)
 141   2      //         {    
 142   2      //              InitializeSystem( );
 143   2      //              PcdReset();
 144   2      //              PcdAntennaOff(); 
 145   2      //              PcdAntennaOn(); 
 146   2      //                        led_on();
 147   2      //                        continue;
 148   2      //         }         
 149   2      ////             printf("¿¨µÄÀàÐÍ:");
 150   2      ////         for(i=0;i<2;i++)
 151   2      ////             {
 152   2      ////                 temp=g_ucTempbuf[i];
 153   2      ////                 printf("%X",temp); 
 154   2      ////             }
 155   2      //                      
 156   2      //         status = PcdAnticoll(g_ucTempbuf);//·À³å×²
 157   2      //         if (status != MI_OK)
 158   2      //         { 
 159   2      //                   continue;    
 160   2      //           }        
 161   2      //                              
 162   2      ////             printf("¿¨ÐòÁÐºÅ£º");  //³¬¼¶ÖÕ¶ËÏÔÊ¾,
 163   2      ////             for(i=0;i<4;i++)
 164   2      ////             {
 165   2      ////                     temp=g_ucTempbuf[i];
 166   2      ////                     printf("%X",temp);                     
 167   2      ////             }
 168   2      //
 169   2      //         status = PcdSelect(g_ucTempbuf);//Ñ¡¶¨¿¨Æ¬
 170   2      //         if (status != MI_OK)
 171   2      //         { 
 172   2      //                   continue;    
 173   2      //               }
 174   2      //         status = PcdAuthState(PICC_AUTHENT1A, 1, DefaultKey, g_ucTempbuf);//ÑéÖ¤¿¨Æ¬ÃÜÂë
 175   2      //         if (status != MI_OK)
 176   2      //         {   
C51 COMPILER V9.00   MAIN                                                                  07/18/2016 14:16:50 PAGE 4   

 177   2      //                       continue;    
 178   2      //               }
 179   2      //         
 180   2      //         status = PcdWrite(1, data1);//Ð´¿é
 181   2      //         if (status != MI_OK)
 182   2      //         {  
 183   2      //                  continue;
 184   2      //           }
 185   2      //               //Send485SerialByte("nihao",3);
 186   2      //               
 187   2      //               while(1)
 188   2      //               {
 189   2      //                  
 190   2      //                      M1_Read(PICC_AUTHENT1A ,3,16,DefaultKey);
 191   2      //               }
 192   2              }
 193   1      }
 194          //////////////////////////////////////////////////////////////////////////////////
 195          //// ¹¦ÄÜÃèÊö : ¶¨Ê±Æ÷ÖÐ¶ÏÈë¿Ú
 196          //// ÊäÈë²ÎÊý : 
 197          //// ·µ»Ø²ÎÊý : 
 198          //// ËµÃ÷     :  
 199          //////////////////////////////////////////////////////////////////////////////////
 200          void timer0_int (void) interrupt 1
 201          { 
 202   1              TH0  = TH0_INIT;
 203   1          TL0  = TL0_INIT;
 204   1      //    rc_cont++;
 205   1      //      if(rc_cont>RC_CON)
 206   1      //      {
 207   1      //          rc_cont=0;
 208   1      //          M1_Read(PICC_AUTHENT1A ,3,16,DefaultKey);   
 209   1      //      }
 210   1          timerc++;
 211   1              if(timerc>1000)
 212   1              {
 213   2                 LED4  =1;
 214   2                
 215   2              }
 216   1              else
 217   1                 LED4 =0;
 218   1              if(timerc>2000)
 219   1                 timerc =0;
 220   1      //      int index = 0;
 221   1              if(rc_blink_read>0)       //¶Á¿¨»òÕßÐ´¿¨³É¹¦ºóÖ¸Ê¾µÆÁÁ
 222   1              {
 223   2                      rc_blink_read--;
 224   2                      led_on();
 225   2              }
 226   1              else
 227   1              {
 228   2                      led_off();
 229   2              }
 230   1      
 231   1      //        
 232   1      //    sys.led_scan_flag  = ON;
 233   1      //    //´®¿Ú1-485»º³åÇøÓÐÊý¾Ý
 234   1      //    if (uart.rIndex != 0)                             
 235   1      //    {
 236   1      //        if (uart.rTimer-- == 0) 
 237   1      //        {
 238   1      //                      uart.rFlag  = ON;
C51 COMPILER V9.00   MAIN                                                                  07/18/2016 14:16:50 PAGE 5   

 239   1      //              }
 240   1      //    }
 241   1      //
 242   1      //    //´®¿Ú2-232»º³åÇøÓÐÊý¾Ý
 243   1      //    if (uart232.rIndex != 0)                          
 244   1      //    {
 245   1      //              if (uart232.rTimer-- == 0) 
 246   1      //              {
 247   1      //                      uart232.rFlag  = ON;
 248   1      //                      digital_led_refresh = ON;
 249   1      //              }
 250   1      //    }    
 251   1      //    //µÝ¼õ¼ÆËãÆ÷£¬×Ô¼õ1
 252   1      //    if (sys.led_flash_count != 0)
 253   1      //        sys.led_flash_count--;
 254   1      //      for(index = 0; index < 6; index++)
 255   1      //      {
 256   1      //              if(LightTowerCtl[index].led_flash_count > 0)
 257   1      //                      LightTowerCtl[index].led_flash_count--;
 258   1      //      }
 259   1      //    //°¤¸öÉ¨ÃèÊýÂë¹Ü
 260   1      //    led_Scan();
 261   1      
 262   1      }
 263          /*******************************************************************************
 264                                                                          END                                     
 265          *******************************************************************************/
 266          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    191    ----
   CONSTANT SIZE    =     22    ----
   XDATA SIZE       =     78    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
